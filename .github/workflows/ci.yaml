name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yt-comments-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 23
          distribution: temurin
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build
        run: ./gradlew build
        env:
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
      - name: Upload backend test reports
        uses: codecov/test-results-action@v1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./backend/build/test-results/test/
          flags: backend
      - name: Upload frontend test reports
        uses: codecov/test-results-action@v1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./frontend/coverage/
          file: ./junit.xml
          flags: frontend
      - name: Upload backend coverage reports
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./backend/build/reports/jacoco/test/
          files: ./jacocoTestReport.xml
          flags: backend
      - name: Upload frontend coverage reports
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./frontend/coverage/
          files: ./cobertura-coverage.xml
          flags: frontend
      - name: Upload build reports
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: backend-build-reports
          path: backend/build/reports

  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: frontend/package-lock.json
          node-version: latest
      - name: Install dependencies
        run: cd frontend && npm ci
      - name: Lint frontend
        run: npm run lint:report
        continue-on-error: true
      - name: Annotate pull request
        uses: enso-org/eslint-annotate-action@v3
        with:
          check-name: eslint
          markdown-report-on-step-summary: true
          report-json: eslint-report.json
