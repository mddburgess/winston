openapi: 3.1.1

info:
  title: Winston
  description:
    OpenAPI specification for the Winston backend.
  contact:
    name: Mike Burgess
  license:
    name: MIT Non-AI License
    url: https://github.com/mddburgess/winston/blob/main/LICENSE.md
  version: v1

servers:
  - description: Development
    url: http://localhost:8080

paths:
  /api/v1/channels:
    get:
      summary: List channels
      description:
        Lists the channel data for all the fetched channels.
      tags:
        - Channels
      operationId: listChannels
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: ./schemas/channels/listChannels-response.yaml

  /api/v1/channels/{handle}:
    get:
      summary: Get channel
      description:
        Gets the channel data for a single fetched channel.
      tags:
        - Channels
      operationId: getChannelByHandle
      parameters:
        - name: handle
          description:
            The unique channel handle used in the channel's URL.
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: ./schemas/channels/channel.yaml
        "404":
          description:
            The requested channel was not found.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                channelNotFound:
                  $ref: ./examples/getChannelByHandle/404-channelNotFound.yaml

  /api/v1/channels/{handle}/videos:
    get:
      summary: List videos for channel
      description:
        Lists the video data for all the fetched videos for a single channel.
      tags:
        - Videos
      operationId: listVideosForChannel
      parameters:
        - name: handle
          description:
            The unique channel handle used in the channel's URL.
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: ./schemas/videos/listVideosForChannel-response.yaml
        "404":
          description:
            The requested channel was not found.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                channelNotFound:
                  $ref: ./examples/listVideosForChannel/404-channelNotFound.yaml

  /api/v1/videos/{id}:
    get:
      summary: Get video
      description:
        Gets the video data for a single fetched video.
      tags:
        - Videos
      operationId: getVideoById
      parameters:
        - name: id
          description:
            The unique identifier for the video.
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: ./schemas/videos/video.yaml
        "404":
          description:
            The requested video was not found.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                videoNotFound:
                  $ref: ./examples/getVideoById/404-videoNotFound.yaml

  /api/v1/videos/{id}/comments:
    get:
      summary: List comments for video
      description:
        Lists all the fetched comments for a single video.
      tags:
        - Comments
      operationId: listCommentsForVideo
      parameters:
        - name: id
          description:
            The unique identifier for the video.
          in: path
          required: true
          schema:
            type: string
        - name: author
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: ./schemas/comments/listCommentsForVideo-response.yaml
        "404":
          description:
            The requested video was not found.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                videoNotFound:
                  $ref: ./examples/listCommentsForVideo/404-videoNotFound.yaml

  /api/v1/authors:
    get:
      summary: List authors
      description:
        Lists the authors for all the fetched comments.
      tags:
        - Authors
      operationId: listAuthors
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: ./schemas/authors/listAuthors-response.yaml

  /api/v1/authors/{handle}:
    get:
      summary: Get author by handle
      description:
        Gets the author summary data for a single author.
      tags:
        - Authors
      operationId: getAuthorByHandle
      parameters:
        - name: handle
          description:
            The unique channel handle used in the author's channel URL.
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: ./schemas/authors/getAuthorByHandle-response.yaml
        "404":
          description:
            The requested author was not found.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                notFound:
                  $ref: ./examples/getAuthorByHandle/404-authorNotFound.yaml

  /api/v1/fetch:
    post:
      summary: Fetch
      tags:
        - Fetch
      operationId: fetch
      parameters:
        - name: X-Notify-Subscription
          in: header
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/fetch/fetch-request.yaml

        required: true
      responses:
        "202":
          description:
            The fetch request was accepted for processing.

  /api/v1/fetch/limits:
    get:
      summary: Get fetch limits
      description:
        Gets the limits on calling the fetch API.
      tags:
        - Fetch
      operationId: getFetchLimits
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: ./schemas/fetch/fetch-limits-response.yaml

  /api/v1/videos/{videoId}/thumbnail:
    get:
      tags:
        - thumbnail-controller
      operationId: getVideoThumbnail
      parameters:
        - name: videoId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: byte
  /api/v1/notifications:
    get:
      tags:
        - notifications-controller
      operationId: subscribe
      responses:
        "200":
          description: OK
          content:
            text/event-stream:
              schema:
                type: array
                format: event-stream
                items:
                  type: string
  /api/v1/channels/{channelId}/thumbnail:
    get:
      tags:
        - thumbnail-controller
      operationId: getChannelThumbnail
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: byte

  /api/v1/authors/{authorId}/thumbnail:
    get:
      tags:
        - thumbnail-controller
      operationId: getAuthorThumbnail
      parameters:
        - name: authorId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: byte

components:
  schemas:
    Error:
      $ref: "schemas/error.yaml"

tags:
  - name: Channels
  - name: Videos
  - name: Comments
  - name: Authors
  - name: Fetch
